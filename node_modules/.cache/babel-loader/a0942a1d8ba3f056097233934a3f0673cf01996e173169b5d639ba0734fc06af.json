{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport rainEffect from '@/components/rainEffect.vue';\nimport Navbar from '@/components/Navbar.vue';\nimport DownTips from '@/components/DownTips.vue';\nimport { getTalk } from '@/api/getTalk';\nimport Avater from '@/components/Avater.vue';\nexport default {\n  name: 'LayoutIndex',\n  components: {\n    rainEffect,\n    Navbar,\n    DownTips,\n    Avater\n  },\n  data() {\n    return {\n      isVideoPlaying: false,\n      isScrolled: false,\n      poetry: 'Âä†ËΩΩ‰∏≠......',\n      currentWallpaper: '',\n      wallpapers: [require('@/assets/wallpaper/4kwallpaper-1.jpg'), require('@/assets/wallpaper/4kwallpaper-2.jpg'), require('@/assets/wallpaper/4kwallpaper-3.png'), require('@/assets/wallpaper/4kwallpaper-4.jpg'), require('@/assets/wallpaper/4kwallpaper-6.jpg'), require('@/assets/wallpaper/4kwallpaper-7.jpg'), require('@/assets/wallpaper/4kwallpaper-8.png'), require('@/assets/wallpaper/4kwallpaper-9.jpg')]\n    };\n  },\n  computed: {\n    ifHomePage() {\n      return this.$route.path === '/';\n    },\n    isHomepage() {\n      return this.$route.path === '/';\n    }\n  },\n  mounted() {\n    this.currentWallpaper = this.getRandomImage();\n    this.preloadImages();\n    window.addEventListener('scroll', this.handleScroll);\n    getTalk(poetry => {\n      this.poetry = poetry;\n    });\n  },\n  beforeDestroy() {\n    window.removeEventListener('scroll', this.handleScroll);\n  },\n  methods: {\n    handleScroll() {\n      this.isScrolled = window.scrollY > 100;\n    },\n    playVideo() {\n      this.isVideoPlaying = true;\n      const video = this.$refs.video;\n      if (video) {\n        if (video.requestFullscreen) {\n          video.requestFullscreen();\n        } else if (video.mozRequestFullScreen) {\n          video.mozRequestFullScreen();\n        } else if (video.webkitRequestFullscreen) {\n          video.webkitRequestFullscreen();\n        } else if (video.msRequestFullscreen) {\n          video.msRequestFullscreen();\n        }\n      }\n    },\n    getRandomImage() {\n      const lastIndex = localStorage.getItem('wallpaperIndex');\n      let randomIndex;\n      do {\n        randomIndex = Math.floor(Math.random() * this.wallpapers.length);\n      } while (lastIndex === randomIndex);\n      localStorage.setItem('wallpaperIndex', randomIndex);\n      return this.wallpapers[randomIndex];\n    },\n    preloadImages() {\n      this.wallpapers.forEach(url => {\n        const img = new Image();\n        img.src = url;\n        img.onload = () => {\n          console.log(`${url}È¢ÑÂä†ËΩΩÂÆåÊàê`);\n        };\n      });\n    }\n  }\n};","map":{"version":3,"names":["rainEffect","Navbar","DownTips","getTalk","Avater","name","components","data","isVideoPlaying","isScrolled","poetry","currentWallpaper","wallpapers","require","computed","ifHomePage","$route","path","isHomepage","mounted","getRandomImage","preloadImages","window","addEventListener","handleScroll","beforeDestroy","removeEventListener","methods","scrollY","playVideo","video","$refs","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","lastIndex","localStorage","getItem","randomIndex","Math","floor","random","length","setItem","forEach","url","img","Image","src","onload","console","log"],"sources":["src/views/layout/index.vue"],"sourcesContent":["<template>\r\n  <div class=\"maincage\" :style=\"{backgroundImage : `url(${currentWallpaper})`}\">\r\n    <rainEffect></rainEffect>\r\n\r\n    <!-- Â§¥ÈÉ®ÂØºËà™ -->\r\n    <header>\r\n      <div :class=\"['head', { 'scrolled': isScrolled }]\">\r\n        <div class=\"logo\" @click=\"playVideo\">\r\n          <img src=\"@/assets/‰ΩêÂä©.webp\" alt=\"\">\r\n          AHAO BLOG\r\n        </div>\r\n        <Navbar></Navbar>\r\n        <!-- ÂÖ®Â±èËßÜÈ¢ë -->\r\n      <div v-if=\"isVideoPlaying\" class=\"video-container\">\r\n        <video ref=\"video\" autoplay>\r\n          <source src=\"@/assets/‰ΩêÂä©.mp4\" type=\"video/mp4\">\r\n          ÊÇ®ÁöÑÊµèËßàÂô®‰∏çÊîØÊåÅËßÜÈ¢ëÊí≠Êîæ„ÄÇ\r\n        </video>\r\n        <button @click=\"isVideoPlaying = false\" class=\"close-btn\">ÂÖ≥Èó≠</button>\r\n      </div>\r\n      <Avater></Avater>\r\n      </div>\r\n    </header>\r\n    <!-- ËØóËØçÈÉ®ÂàÜ (‰ªÖÈ¶ñÈ°µÊòæÁ§∫) -->\r\n    <div v-if=\"ifHomePage\" class=\"poetry-container\">\r\n      <p>üìú ÊØèÊó•ËØóËØç</p>\r\n      {{ poetry }}\r\n    </div>\r\n\r\n    <!-- È°µÈù¢ÂÜÖÂÆπÂå∫ -->\r\n    <main class=\"content-container\">\r\n\r\n      <DownTips v-show=\"!isHomepage && !isScrolled\" class=\"down-tips\" />\r\n\r\n      <router-view :key=\"$route.fullPath\"></router-view>\r\n    </main>\r\n\r\n    <footer></footer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport rainEffect from '@/components/rainEffect.vue'\r\nimport Navbar from '@/components/Navbar.vue'\r\nimport DownTips from '@/components/DownTips.vue'\r\nimport { getTalk } from '@/api/getTalk'\r\nimport Avater from '@/components/Avater.vue'\r\nexport default {\r\n  name: 'LayoutIndex',\r\n  components: {\r\n    rainEffect,\r\n    Navbar,\r\n    DownTips,\r\n    Avater\r\n  },\r\n  data () {\r\n    return {\r\n      isVideoPlaying: false,\r\n      isScrolled: false,\r\n      poetry: 'Âä†ËΩΩ‰∏≠......',\r\n      currentWallpaper: '',\r\n      wallpapers: [\r\n        require('@/assets/wallpaper/4kwallpaper-1.jpg'),\r\n        require('@/assets/wallpaper/4kwallpaper-2.jpg'),\r\n        require('@/assets/wallpaper/4kwallpaper-3.png'),\r\n        require('@/assets/wallpaper/4kwallpaper-4.jpg'),\r\n        require('@/assets/wallpaper/4kwallpaper-6.jpg'),\r\n        require('@/assets/wallpaper/4kwallpaper-7.jpg'),\r\n        require('@/assets/wallpaper/4kwallpaper-8.png'),\r\n        require('@/assets/wallpaper/4kwallpaper-9.jpg')\r\n\r\n      ]\r\n    }\r\n  },\r\n  computed: {\r\n\r\n    ifHomePage () {\r\n      return this.$route.path === '/'\r\n    },\r\n    isHomepage () {\r\n      return this.$route.path === '/'\r\n    }\r\n\r\n  },\r\n  mounted () {\r\n    this.currentWallpaper = this.getRandomImage()\r\n    this.preloadImages()\r\n    window.addEventListener('scroll', this.handleScroll)\r\n    getTalk(poetry => {\r\n      this.poetry = poetry\r\n    })\r\n  },\r\n  beforeDestroy () {\r\n    window.removeEventListener('scroll', this.handleScroll)\r\n  },\r\n  methods: {\r\n    handleScroll () {\r\n      this.isScrolled = window.scrollY > 100\r\n    },\r\n\r\n    playVideo () {\r\n      this.isVideoPlaying = true\r\n      const video = this.$refs.video\r\n      if (video) {\r\n        if (video.requestFullscreen) {\r\n          video.requestFullscreen()\r\n        } else if (video.mozRequestFullScreen) {\r\n          video.mozRequestFullScreen()\r\n        } else if (video.webkitRequestFullscreen) {\r\n          video.webkitRequestFullscreen()\r\n        } else if (video.msRequestFullscreen) {\r\n          video.msRequestFullscreen()\r\n        }\r\n      }\r\n    },\r\n    getRandomImage () {\r\n      const lastIndex = localStorage.getItem('wallpaperIndex')\r\n      let randomIndex\r\n      do {\r\n        randomIndex = Math.floor(Math.random() * this.wallpapers.length)\r\n      } while (lastIndex === randomIndex)\r\n      localStorage.setItem('wallpaperIndex', randomIndex)\r\n      return this.wallpapers[randomIndex]\r\n    },\r\n    preloadImages () {\r\n      this.wallpapers.forEach(url => {\r\n        const img = new Image()\r\n        img.src = url\r\n        img.onload = () => {\r\n          console.log(`${url}È¢ÑÂä†ËΩΩÂÆåÊàê`)\r\n        }\r\n      })\r\n    }\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n@import '@/styles/LayoutIndex.css';\r\n\r\n</style>\r\n"],"mappings":";;AA2CA,OAAAA,UAAA;AACA,OAAAC,MAAA;AACA,OAAAC,QAAA;AACA,SAAAC,OAAA;AACA,OAAAC,MAAA;AACA;EACAC,IAAA;EACAC,UAAA;IACAN,UAAA;IACAC,MAAA;IACAC,QAAA;IACAE;EACA;EACAG,KAAA;IACA;MACAC,cAAA;MACAC,UAAA;MACAC,MAAA;MACAC,gBAAA;MACAC,UAAA,GACAC,OAAA,0CACAA,OAAA,0CACAA,OAAA,0CACAA,OAAA,0CACAA,OAAA,0CACAA,OAAA,0CACAA,OAAA,0CACAA,OAAA;IAGA;EACA;EACAC,QAAA;IAEAC,WAAA;MACA,YAAAC,MAAA,CAAAC,IAAA;IACA;IACAC,WAAA;MACA,YAAAF,MAAA,CAAAC,IAAA;IACA;EAEA;EACAE,QAAA;IACA,KAAAR,gBAAA,QAAAS,cAAA;IACA,KAAAC,aAAA;IACAC,MAAA,CAAAC,gBAAA,gBAAAC,YAAA;IACArB,OAAA,CAAAO,MAAA;MACA,KAAAA,MAAA,GAAAA,MAAA;IACA;EACA;EACAe,cAAA;IACAH,MAAA,CAAAI,mBAAA,gBAAAF,YAAA;EACA;EACAG,OAAA;IACAH,aAAA;MACA,KAAAf,UAAA,GAAAa,MAAA,CAAAM,OAAA;IACA;IAEAC,UAAA;MACA,KAAArB,cAAA;MACA,MAAAsB,KAAA,QAAAC,KAAA,CAAAD,KAAA;MACA,IAAAA,KAAA;QACA,IAAAA,KAAA,CAAAE,iBAAA;UACAF,KAAA,CAAAE,iBAAA;QACA,WAAAF,KAAA,CAAAG,oBAAA;UACAH,KAAA,CAAAG,oBAAA;QACA,WAAAH,KAAA,CAAAI,uBAAA;UACAJ,KAAA,CAAAI,uBAAA;QACA,WAAAJ,KAAA,CAAAK,mBAAA;UACAL,KAAA,CAAAK,mBAAA;QACA;MACA;IACA;IACAf,eAAA;MACA,MAAAgB,SAAA,GAAAC,YAAA,CAAAC,OAAA;MACA,IAAAC,WAAA;MACA;QACAA,WAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,MAAA,UAAA9B,UAAA,CAAA+B,MAAA;MACA,SAAAP,SAAA,KAAAG,WAAA;MACAF,YAAA,CAAAO,OAAA,mBAAAL,WAAA;MACA,YAAA3B,UAAA,CAAA2B,WAAA;IACA;IACAlB,cAAA;MACA,KAAAT,UAAA,CAAAiC,OAAA,CAAAC,GAAA;QACA,MAAAC,GAAA,OAAAC,KAAA;QACAD,GAAA,CAAAE,GAAA,GAAAH,GAAA;QACAC,GAAA,CAAAG,MAAA;UACAC,OAAA,CAAAC,GAAA,IAAAN,GAAA;QACA;MACA;IACA;EAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}