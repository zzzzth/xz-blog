{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import Barrage from '@/components/Barrage.vue'\nimport { mapGetters } from 'vuex';\nimport { Message } from 'element-ui';\nimport Swal from 'sweetalert2';\nexport default {\n  name: 'remarkIndex',\n  data() {\n    return {\n      content: '',\n      isSubmitting: false,\n      isShowButton: false,\n      messages: [],\n      socket: null\n    };\n  },\n  created() {\n    // this.initWebSocket()\n  },\n  components: {\n    // Barrage\n  },\n  methods: {\n    showButton() {\n      this.isShowButton = true;\n    },\n    async submitbarrage() {\n      if (!this.islogin) {\n        Swal.fire({\n          title: 'ÂìéÂëÄ~',\n          text: '‰Ω†ËøòÊ≤°ÁôªÂΩïÂë¢ÔºåÁ¨®Ëõã~ ü•∫',\n          icon: 'warning',\n          confirmButtonText: 'È©¨‰∏äÂéªÁôªÂΩï üíñ',\n          background: '#fff0f6',\n          // ÂèØÁà±Á≤âËâ≤\n          customClass: {\n            popup: 'cute-popup'\n          },\n          preConfirm: () => {\n            this.$router.push({\n              path: '/login'\n            }); // Ë∑≥ËΩ¨Âà∞ÁôªÂΩïÈ°µÈù¢\n          }\n        });\n        return;\n      }\n      if (!this.content.trim()) {\n        return Message.warning('Ê≤°‰∏úË•øËøòÂèëü§®');\n      }\n      if (this.isSubmitting) return;\n      this.isSubmitting = true;\n\n      // Â∞ÜÁî®Êà∑ËæìÂÖ•ÁöÑÂÜÖÂÆπÂèëÈÄÅÁªô WebSocket ÊúçÂä°Âô®\n\n      this.content = '';\n      setTimeout(() => {\n        this.isSubmitting = false;\n      }, 1000);\n    }\n  },\n  computed: {\n    ...mapGetters('user', ['getUserInfo']),\n    islogin() {\n      console.log('Vuex ÈáåÁöÑ getUserInfo:', this.getUserInfo);\n      return !!(this.getUserInfo && this.getUserInfo.userId);\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","Message","Swal","name","data","content","isSubmitting","isShowButton","messages","socket","created","components","methods","showButton","submitbarrage","islogin","fire","title","text","icon","confirmButtonText","background","customClass","popup","preConfirm","$router","push","path","trim","warning","setTimeout","computed","console","log","getUserInfo","userId"],"sources":["src/views/remark/index.vue"],"sourcesContent":["<template>\r\n  <div class=\"remark\">\r\n    <h1>Ê†ëÊ¥û</h1>\r\n    <input type=\"text\" placeholder=\"Áïô‰∏ãÁÇπ‰ªÄ‰πàÂï¶~\" class=\"dreamBoard\" @click=\"showButton\" v-model=\"content\">\r\n    <button class=\"pushRemark\" v-if=\"isShowButton\" @click=\"submitbarrage\" :disabled=\"isSubmitting\">{{ isSubmitting ? 'ÂèëÂ∞Ñ‰∏≠...' : 'ÂèëÂ∞Ñ' }}</button>\r\n    <!-- <Barrage :messages=\"messages\"></Barrage> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import Barrage from '@/components/Barrage.vue'\r\nimport { mapGetters } from 'vuex'\r\nimport { Message } from 'element-ui'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport default {\r\n  name: 'remarkIndex',\r\n  data () {\r\n    return {\r\n      content: '',\r\n      isSubmitting: false,\r\n      isShowButton: false,\r\n      messages: [],\r\n      socket: null\r\n    }\r\n  },\r\n  created () {\r\n    // this.initWebSocket()\r\n  },\r\n  components: {\r\n    // Barrage\r\n  },\r\n  methods: {\r\n    showButton () {\r\n      this.isShowButton = true\r\n    },\r\n\r\n    async submitbarrage () {\r\n      if (!this.islogin) {\r\n        Swal.fire({\r\n          title: 'ÂìéÂëÄ~',\r\n          text: '‰Ω†ËøòÊ≤°ÁôªÂΩïÂë¢ÔºåÁ¨®Ëõã~ ü•∫',\r\n          icon: 'warning',\r\n          confirmButtonText: 'È©¨‰∏äÂéªÁôªÂΩï üíñ',\r\n          background: '#fff0f6', // ÂèØÁà±Á≤âËâ≤\r\n          customClass: {\r\n            popup: 'cute-popup'\r\n          },\r\n          preConfirm: () => {\r\n            this.$router.push({ path: '/login' }) // Ë∑≥ËΩ¨Âà∞ÁôªÂΩïÈ°µÈù¢\r\n          }\r\n        })\r\n        return\r\n      }\r\n      if (!this.content.trim()) {\r\n        return Message.warning('Ê≤°‰∏úË•øËøòÂèëü§®')\r\n      }\r\n      if (this.isSubmitting) return\r\n      this.isSubmitting = true\r\n\r\n      // Â∞ÜÁî®Êà∑ËæìÂÖ•ÁöÑÂÜÖÂÆπÂèëÈÄÅÁªô WebSocket ÊúçÂä°Âô®\r\n\r\n      this.content = ''\r\n\r\n      setTimeout(() => {\r\n        this.isSubmitting = false\r\n      }, 1000)\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters('user', ['getUserInfo']),\r\n    islogin () {\r\n      console.log('Vuex ÈáåÁöÑ getUserInfo:', this.getUserInfo)\r\n      return !!(this.getUserInfo && this.getUserInfo.userId)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.remark {\r\n  position: relative;\r\n  top: -280px;\r\n}\r\nh1 {\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  text-align: center;\r\n  color: white;\r\n}\r\n.dreamBoard {\r\n  width: 200px;\r\n  height: 30px;\r\n  border-radius: 15px;\r\n  box-shadow: 10px white;\r\n  background-color: transparent;\r\n  color: white;\r\n}\r\n.dreamBoard::placeholder{\r\n  text-indent: 10px;\r\n  color: white;\r\n  opacity: 0.8;\r\n}\r\n.pushRemark {\r\n  width: 80px;\r\n  height: 30px;\r\n  color: white;\r\n  border-radius: 15px;\r\n  cursor: pointer;\r\n  background-color: transparent;\r\n  margin-left: 5px;\r\n  border-radius: 10px;\r\n  font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n  transition: transform 0.3;\r\n}\r\n</style>\r\n"],"mappings":";AAUA;AACA,SAAAA,UAAA;AACA,SAAAC,OAAA;AACA,OAAAC,IAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,YAAA;MACAC,YAAA;MACAC,QAAA;MACAC,MAAA;IACA;EACA;EACAC,QAAA;IACA;EAAA,CACA;EACAC,UAAA;IACA;EAAA,CACA;EACAC,OAAA;IACAC,WAAA;MACA,KAAAN,YAAA;IACA;IAEA,MAAAO,cAAA;MACA,UAAAC,OAAA;QACAb,IAAA,CAAAc,IAAA;UACAC,KAAA;UACAC,IAAA;UACAC,IAAA;UACAC,iBAAA;UACAC,UAAA;UAAA;UACAC,WAAA;YACAC,KAAA;UACA;UACAC,UAAA,EAAAA,CAAA;YACA,KAAAC,OAAA,CAAAC,IAAA;cAAAC,IAAA;YAAA;UACA;QACA;QACA;MACA;MACA,UAAAtB,OAAA,CAAAuB,IAAA;QACA,OAAA3B,OAAA,CAAA4B,OAAA;MACA;MACA,SAAAvB,YAAA;MACA,KAAAA,YAAA;;MAEA;;MAEA,KAAAD,OAAA;MAEAyB,UAAA;QACA,KAAAxB,YAAA;MACA;IACA;EACA;EACAyB,QAAA;IACA,GAAA/B,UAAA;IACAe,QAAA;MACAiB,OAAA,CAAAC,GAAA,8BAAAC,WAAA;MACA,eAAAA,WAAA,SAAAA,WAAA,CAAAC,MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}