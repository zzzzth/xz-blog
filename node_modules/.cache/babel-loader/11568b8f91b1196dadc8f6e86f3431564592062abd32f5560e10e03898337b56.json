{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport request from '@/utils/request';\nexport const registerApi = async (username, password, email) => {\n  try {\n    console.log('Username:', username);\n    console.log('Password:', password);\n    console.log('Email:', email);\n\n    // 发送 POST 请求\n    const response = await request.post('/users', {\n      username,\n      password,\n      email\n    });\n    console.log('注册成功，返回的数据:', response); // 输出注册成功的响应数据\n    return response;\n  } catch (error) {\n    // 捕获错误并返回错误信息\n    console.error('注册请求失败:', error.response || error.message);\n    throw new Error('注册失败，请稍后再试');\n  }\n};\n\n// 用户名规范\nexport const validUsername = async username => {\n  const response = await request.get('/users', {\n    username\n  });\n  const existUser = response.find(username);\n  if (existUser) {\n    return '用户名已存在';\n  }\n  if (existUser > 8) {\n    return '用户名不能超过8位';\n  }\n  return true;\n};\nexport default registerApi;","map":{"version":3,"names":["request","registerApi","username","password","email","console","log","response","post","error","message","Error","validUsername","get","existUser","find"],"sources":["D:/xz-website/src/api/register.js"],"sourcesContent":["import request from '@/utils/request'\r\n\r\nexport const registerApi = async (username, password, email) => {\r\n  try {\r\n    console.log('Username:', username)\r\n    console.log('Password:', password)\r\n    console.log('Email:', email)\r\n\r\n    // 发送 POST 请求\r\n    const response = await request.post('/users', {\r\n      username,\r\n      password,\r\n      email\r\n    })\r\n    console.log('注册成功，返回的数据:', response) // 输出注册成功的响应数据\r\n    return response\r\n  } catch (error) {\r\n    // 捕获错误并返回错误信息\r\n    console.error('注册请求失败:', error.response || error.message)\r\n    throw new Error('注册失败，请稍后再试')\r\n  }\r\n}\r\n\r\n// 用户名规范\r\nexport const validUsername = async username => {\r\n  const response = await request.get('/users', {\r\n    username\r\n  })\r\n  const existUser = response.find(username)\r\n  if (existUser) {\r\n    return '用户名已存在'\r\n  }\r\n  if (existUser > 8) {\r\n    return '用户名不能超过8位'\r\n  }\r\n  return true\r\n}\r\n\r\nexport default registerApi\r\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,iBAAiB;AAErC,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,EAAEC,KAAK,KAAK;EAC9D,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEJ,QAAQ,CAAC;IAClCG,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,QAAQ,CAAC;IAClCE,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,KAAK,CAAC;;IAE5B;IACA,MAAMG,QAAQ,GAAG,MAAMP,OAAO,CAACQ,IAAI,CAAC,QAAQ,EAAE;MAC5CN,QAAQ;MACRC,QAAQ;MACRC;IACF,CAAC,CAAC;IACFC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEC,QAAQ,CAAC,EAAC;IACrC,OAAOA,QAAQ;EACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd;IACAJ,OAAO,CAACI,KAAK,CAAC,SAAS,EAAEA,KAAK,CAACF,QAAQ,IAAIE,KAAK,CAACC,OAAO,CAAC;IACzD,MAAM,IAAIC,KAAK,CAAC,YAAY,CAAC;EAC/B;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,aAAa,GAAG,MAAMV,QAAQ,IAAI;EAC7C,MAAMK,QAAQ,GAAG,MAAMP,OAAO,CAACa,GAAG,CAAC,QAAQ,EAAE;IAC3CX;EACF,CAAC,CAAC;EACF,MAAMY,SAAS,GAAGP,QAAQ,CAACQ,IAAI,CAACb,QAAQ,CAAC;EACzC,IAAIY,SAAS,EAAE;IACb,OAAO,QAAQ;EACjB;EACA,IAAIA,SAAS,GAAG,CAAC,EAAE;IACjB,OAAO,WAAW;EACpB;EACA,OAAO,IAAI;AACb,CAAC;AAED,eAAeb,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}