{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'Barrage',\n  props: {\n    messages: Array\n  },\n  data() {\n    return {\n      barrageList: [] // 用于存储正在屏幕上显示的弹幕\n    };\n  },\n  watch: {\n    messages: {\n      handler(newVal) {\n        if (newVal.length > 0) {\n          this.addBarrage(newVal[newVal.length - 1]); // 只添加最新的一条弹幕\n        }\n      },\n      deep: true\n    }\n  },\n  methods: {\n    addBarrage(text) {\n      const top = Math.random() * 80 + 'vh'; // 随机一个垂直位置\n      const color = this.getRandomColor(); // 随机颜色\n      const duration = Math.random() * 3 + 4 + 's'; // 随机一个滚动时间\n\n      const newBarrage = {\n        text,\n        style: {\n          top,\n          color,\n          animationDuration: duration\n        }\n      };\n      this.barrageList.push(newBarrage);\n\n      // 5秒后移除弹幕（避免无限堆积）\n      setTimeout(() => {\n        this.barrageList.shift();\n      }, parseFloat(duration) * 1000);\n    },\n    getRandomColor() {\n      const colors = ['#ff4d4f', '#40a9ff', '#fadb14', '#52c41a', '#eb2f96'];\n      return colors[Math.floor(Math.random() * colors.length)];\n    }\n  }\n};","map":{"version":3,"names":["name","props","messages","Array","data","barrageList","watch","handler","newVal","length","addBarrage","deep","methods","text","top","Math","random","color","getRandomColor","duration","newBarrage","style","animationDuration","push","setTimeout","shift","parseFloat","colors","floor"],"sources":["src/components/Barrage.vue"],"sourcesContent":["<template>\r\n    <div class=\"barrage-container\">\r\n      <div\r\n        v-for=\"(item, index) in barrageList\"\r\n        :key=\"index\"\r\n        class=\"barrage-item\"\r\n        :style=\"item.style\"\r\n      >\r\n        {{ item.text }}\r\n      </div>\r\n    </div>\r\n  </template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Barrage',\r\n  props: {\r\n    messages: Array\r\n  },\r\n  data () {\r\n    return {\r\n      barrageList: [] // 用于存储正在屏幕上显示的弹幕\r\n    }\r\n  },\r\n  watch: {\r\n    messages: {\r\n      handler (newVal) {\r\n        if (newVal.length > 0) {\r\n          this.addBarrage(newVal[newVal.length - 1]) // 只添加最新的一条弹幕\r\n        }\r\n      },\r\n      deep: true\r\n    }\r\n  },\r\n  methods: {\r\n    addBarrage (text) {\r\n      const top = Math.random() * 80 + 'vh' // 随机一个垂直位置\r\n      const color = this.getRandomColor() // 随机颜色\r\n      const duration = Math.random() * 3 + 4 + 's' // 随机一个滚动时间\r\n\r\n      const newBarrage = {\r\n        text,\r\n        style: {\r\n          top,\r\n          color,\r\n          animationDuration: duration\r\n        }\r\n      }\r\n\r\n      this.barrageList.push(newBarrage)\r\n\r\n      // 5秒后移除弹幕（避免无限堆积）\r\n      setTimeout(() => {\r\n        this.barrageList.shift()\r\n      }, parseFloat(duration) * 1000)\r\n    },\r\n    getRandomColor () {\r\n      const colors = ['#ff4d4f', '#40a9ff', '#fadb14', '#52c41a', '#eb2f96']\r\n      return colors[Math.floor(Math.random() * colors.length)]\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n  <style scoped>\r\n  .barrage-container {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    pointer-events: none;\r\n    overflow: hidden;\r\n    z-index: 1000;\r\n  }\r\n\r\n  .barrage-item {\r\n    position: absolute;\r\n    white-space: nowrap;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    animation: moveBarrage linear infinite;\r\n  }\r\n\r\n  @keyframes moveBarrage {\r\n    from {\r\n      transform: translateX(100vw);\r\n    }\r\n    to {\r\n      transform: translateX(-100%);\r\n    }\r\n  }\r\n  </style>\r\n"],"mappings":";AAcA;EACAA,IAAA;EACAC,KAAA;IACAC,QAAA,EAAAC;EACA;EACAC,KAAA;IACA;MACAC,WAAA;IACA;EACA;EACAC,KAAA;IACAJ,QAAA;MACAK,QAAAC,MAAA;QACA,IAAAA,MAAA,CAAAC,MAAA;UACA,KAAAC,UAAA,CAAAF,MAAA,CAAAA,MAAA,CAAAC,MAAA;QACA;MACA;MACAE,IAAA;IACA;EACA;EACAC,OAAA;IACAF,WAAAG,IAAA;MACA,MAAAC,GAAA,GAAAC,IAAA,CAAAC,MAAA;MACA,MAAAC,KAAA,QAAAC,cAAA;MACA,MAAAC,QAAA,GAAAJ,IAAA,CAAAC,MAAA;;MAEA,MAAAI,UAAA;QACAP,IAAA;QACAQ,KAAA;UACAP,GAAA;UACAG,KAAA;UACAK,iBAAA,EAAAH;QACA;MACA;MAEA,KAAAd,WAAA,CAAAkB,IAAA,CAAAH,UAAA;;MAEA;MACAI,UAAA;QACA,KAAAnB,WAAA,CAAAoB,KAAA;MACA,GAAAC,UAAA,CAAAP,QAAA;IACA;IACAD,eAAA;MACA,MAAAS,MAAA;MACA,OAAAA,MAAA,CAAAZ,IAAA,CAAAa,KAAA,CAAAb,IAAA,CAAAC,MAAA,KAAAW,MAAA,CAAAlB,MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}